!(function () {
    function a(e) {
        if (!(this instanceof a)) return e || (e = null), null === e ? new a() : new a(e);
        if ("function" == typeof e) return (this.random = e), this;
        arguments.length && (this.seed = 0);
        for (var n = 0; n < arguments.length; n++) {
            var i = 0;
            if ("[object String]" === Object.prototype.toString.call(arguments[n]))
                for (var r = 0; r < arguments[n].length; r++) {
                    for (var o = 0, t = 0; t < arguments[n].length; t++) o = arguments[n].charCodeAt(t) + (o << 6) + (o << 16) - o;
                    i += o;
                }
            else i = arguments[n];
            this.seed += (arguments.length - n) * i;
        }
        return (
            (this.mt = this.mersenne_twister(this.seed)),
            (this.bimd5 = this.blueimp_md5()),
            (this.random = function () {
                return this.mt.random(this.seed);
            }),
            this
        );
    }
    function e(a, e) {
        if (((a = a || {}), e)) for (var n in e) void 0 === a[n] && (a[n] = e[n]);
        return a;
    }
    function n(a, e) {
        if (a) throw new RangeError(e);
    }
    function i(a) {
        return function () {
            return this.natural(a);
        };
    }
    function r(a, e) {
        for (var n, i = p(a), r = 0, o = i.length; r < o; r++) e[(n = i[r])] = a[n] || e[n];
    }
    function o(a, e) {
        for (var n = 0, i = a.length; n < i; n++) e[n] = a[n];
    }
    function t(a, e) {
        var n = Array.isArray(a),
            i = e || (n ? new Array(a.length) : {});
        return n ? o(a, i) : r(a, i), i;
    }
    var s = 9007199254740992,
        l = "abcdefghijklmnopqrstuvwxyz",
        c = l.toUpperCase(),
        m = "0123456789abcdef",
        u = Array.prototype.slice;
    a.prototype.VERSION = "1.0.13";
    var d = function () {
        throw new Error("No Base64 encoder available.");
    };
    "function" == typeof btoa
        ? (d = btoa)
        : "function" == typeof Buffer &&
          (d = function (a) {
              return new Buffer(a).toString("base64");
          }),
        (a.prototype.bool = function (a) {
            return (a = e(a, { likelihood: 50 })), n(a.likelihood < 0 || a.likelihood > 100, "Chance: Likelihood accepts values from 0 to 100."), 100 * this.random() < a.likelihood;
        }),
        (a.prototype.animal = function (a) {
            return void 0 !== (a = e(a)).type
                ? (n(!this.get("animals")[a.type.toLowerCase()], "Please pick from desert, ocean, grassland, forest, zoo, pets, farm."), this.pick(this.get("animals")[a.type.toLowerCase()]))
                : ((animalTypeArray = ["desert", "forest", "ocean", "zoo", "farm", "pet", "grassland"]), this.pick(this.get("animals")[this.pick(animalTypeArray)]));
        }),
        (a.prototype.character = function (a) {
            n((a = e(a)).alpha && a.symbols, "Chance: Cannot specify both alpha and symbols.");
            var i, r;
            return (i = "lower" === a.casing ? l : "upper" === a.casing ? c : l + c), (r = a.pool ? a.pool : a.alpha ? i : a.symbols ? "!@#$%^&*()[]" : i + "0123456789!@#$%^&*()[]").charAt(this.natural({ max: r.length - 1 }));
        }),
        (a.prototype.floating = function (a) {
            n((a = e(a, { fixed: 4 })).fixed && a.precision, "Chance: Cannot specify both fixed and precision.");
            var i,
                r = Math.pow(10, a.fixed),
                o = s / r,
                t = -o;
            n(a.min && a.fixed && a.min < t, "Chance: Min specified is out of range with fixed. Min should be, at least, " + t),
                n(a.max && a.fixed && a.max > o, "Chance: Max specified is out of range with fixed. Max should be, at most, " + o),
                (a = e(a, { min: t, max: o }));
            var l = ((i = this.integer({ min: a.min * r, max: a.max * r })) / r).toFixed(a.fixed);
            return parseFloat(l);
        }),
        (a.prototype.integer = function (a) {
            return (a = e(a, { min: -9007199254740992, max: s })), n(a.min > a.max, "Chance: Min cannot be greater than Max."), Math.floor(this.random() * (a.max - a.min + 1) + a.min);
        }),
        (a.prototype.natural = function (a) {
            return (
                "number" == typeof (a = e(a, { min: 0, max: s })).numerals && (n(a.numerals < 1, "Chance: Numerals cannot be less than one."), (a.min = Math.pow(10, a.numerals - 1)), (a.max = Math.pow(10, a.numerals) - 1)),
                n(a.min < 0, "Chance: Min cannot be less than zero."),
                this.integer(a)
            );
        }),
        (a.prototype.hex = function (a) {
            n((a = e(a, { min: 0, max: s, casing: "lower" })).min < 0, "Chance: Min cannot be less than zero.");
            var i = this.natural({ min: a.min, max: a.max });
            return "upper" === a.casing ? i.toString(16).toUpperCase() : i.toString(16);
        }),
        (a.prototype.letter = function (a) {
            a = e(a, { casing: "lower" });
            var n = this.character({ pool: "abcdefghijklmnopqrstuvwxyz" });
            return "upper" === a.casing && (n = n.toUpperCase()), n;
        }),
        (a.prototype.string = function (a) {
            n((a = e(a, { length: this.natural({ min: 5, max: 20 }) })).length < 0, "Chance: Length cannot be less than zero.");
            var i = a.length;
            return this.n(this.character, i, a).join("");
        }),
        (a.prototype.capitalize = function (a) {
            return a.charAt(0).toUpperCase() + a.substr(1);
        }),
        (a.prototype.mixin = function (e) {
            for (var n in e) a.prototype[n] = e[n];
            return this;
        }),
        (a.prototype.unique = function (a, e, i) {
            n("function" != typeof a, "Chance: The first argument must be a function.");
            var r = function (a, e) {
                return -1 !== a.indexOf(e);
            };
            i && (r = i.comparator || r);
            for (var o, t = [], s = 0, l = 50 * e, c = u.call(arguments, 2); t.length < e; ) {
                var m = JSON.parse(JSON.stringify(c));
                if (((o = a.apply(this, m)), r(t, o) || (t.push(o), (s = 0)), ++s > l)) throw new RangeError("Chance: num is likely too large for sample set");
            }
            return t;
        }),
        (a.prototype.n = function (a, e) {
            n("function" != typeof a, "Chance: The first argument must be a function."), void 0 === e && (e = 1);
            var i = e,
                r = [],
                o = u.call(arguments, 2);
            for (i = Math.max(0, i), null; i--; null) r.push(a.apply(this, o));
            return r;
        }),
        (a.prototype.pad = function (a, e, n) {
            return (n = n || "0"), (a += "").length >= e ? a : new Array(e - a.length + 1).join(n) + a;
        }),
        (a.prototype.pick = function (a, e) {
            if (0 === a.length) throw new RangeError("Chance: Cannot pick() from an empty array");
            return e && 1 !== e ? this.shuffle(a).slice(0, e) : a[this.natural({ max: a.length - 1 })];
        }),
        (a.prototype.pickone = function (a) {
            if (0 === a.length) throw new RangeError("Chance: Cannot pickone() from an empty array");
            return a[this.natural({ max: a.length - 1 })];
        }),
        (a.prototype.pickset = function (a, e) {
            if (0 === e) return [];
            if (0 === a.length) throw new RangeError("Chance: Cannot pickset() from an empty array");
            if (e < 0) throw new RangeError("Chance: Count must be a positive number");
            return e && 1 !== e ? this.shuffle(a).slice(0, e) : [this.pickone(a)];
        }),
        (a.prototype.shuffle = function (a) {
            for (var e = a.slice(0), n = [], i = 0, r = Number(e.length), o = 0; o < r; o++) (i = this.natural({ max: e.length - 1 })), (n[o] = e[i]), e.splice(i, 1);
            return n;
        }),
        (a.prototype.weighted = function (a, e, n) {
            if (a.length !== e.length) throw new RangeError("Chance: Length of array and weights must match");
            for (var i, r = 0, o = 0; o < e.length; ++o) {
                if (((i = e[o]), isNaN(i))) throw new RangeError("Chance: All weights must be numbers");
                i > 0 && (r += i);
            }
            if (0 === r) throw new RangeError("Chance: No valid entries in array weights");
            var t,
                s = this.random() * r,
                l = 0,
                c = -1;
            for (o = 0; o < e.length; ++o) {
                if (((i = e[o]), (l += i), i > 0)) {
                    if (s <= l) {
                        t = o;
                        break;
                    }
                    c = o;
                }
                o === e.length - 1 && (t = c);
            }
            var m = a[t];
            return (n = void 0 !== n && n) && (a.splice(t, 1), e.splice(t, 1)), m;
        }),
        (a.prototype.paragraph = function (a) {
            var n = (a = e(a)).sentences || this.natural({ min: 3, max: 7 });
            return this.n(this.sentence, n).join(" ");
        }),
        (a.prototype.sentence = function (a) {
            var n,
                i = (a = e(a)).words || this.natural({ min: 12, max: 18 }),
                r = a.punctuation;
            return (n = this.n(this.word, i).join(" ")), (n = this.capitalize(n)), !1 === r || /^[\.\?;!:]$/.test(r) || (r = "."), r && (n += r), n;
        }),
        (a.prototype.syllable = function (a) {
            for (var n, i = (a = e(a)).length || this.natural({ min: 2, max: 3 }), r = "", o = 0; o < i; o++)
                r += n = 0 === o ? this.character({ pool: "bcdfghjklmnprstvwzaeiou" }) : -1 === "bcdfghjklmnprstvwz".indexOf(n) ? this.character({ pool: "bcdfghjklmnprstvwz" }) : this.character({ pool: "aeiou" });
            return a.capitalize && (r = this.capitalize(r)), r;
        }),
        (a.prototype.word = function (a) {
            n((a = e(a)).syllables && a.length, "Chance: Cannot specify both syllables AND length.");
            var i = a.syllables || this.natural({ min: 1, max: 3 }),
                r = "";
            if (a.length) {
                do {
                    r += this.syllable();
                } while (r.length < a.length);
                r = r.substring(0, a.length);
            } else for (var o = 0; o < i; o++) r += this.syllable();
            return a.capitalize && (r = this.capitalize(r)), r;
        }),
        (a.prototype.age = function (a) {
            var n;
            switch ((a = e(a)).type) {
                case "child":
                    n = { min: 0, max: 12 };
                    break;
                case "teen":
                    n = { min: 13, max: 19 };
                    break;
                case "adult":
                    n = { min: 18, max: 65 };
                    break;
                case "senior":
                    n = { min: 65, max: 100 };
                    break;
                case "all":
                    n = { min: 0, max: 100 };
                    break;
                default:
                    n = { min: 18, max: 65 };
            }
            return this.natural(n);
        }),
        (a.prototype.birthday = function (a) {
            var n = this.age(a),
                i = new Date().getFullYear();
            if (a && a.type) {
                var r = new Date(),
                    o = new Date();
                r.setFullYear(i - n - 1), o.setFullYear(i - n), (a = e(a, { min: r, max: o }));
            } else a = e(a, { year: i - n });
            return this.date(a);
        }),
        (a.prototype.cpf = function (a) {
            a = e(a, { formatted: !0 });
            var n = this.n(this.natural, 9, { max: 9 }),
                i = 2 * n[8] + 3 * n[7] + 4 * n[6] + 5 * n[5] + 6 * n[4] + 7 * n[3] + 8 * n[2] + 9 * n[1] + 10 * n[0];
            (i = 11 - (i % 11)) >= 10 && (i = 0);
            var r = 2 * i + 3 * n[8] + 4 * n[7] + 5 * n[6] + 6 * n[5] + 7 * n[4] + 8 * n[3] + 9 * n[2] + 10 * n[1] + 11 * n[0];
            (r = 11 - (r % 11)) >= 10 && (r = 0);
            var o = "" + n[0] + n[1] + n[2] + "." + n[3] + n[4] + n[5] + "." + n[6] + n[7] + n[8] + "-" + i + r;
            return a.formatted ? o : o.replace(/\D/g, "");
        }),
        (a.prototype.cnpj = function (a) {
            a = e(a, { formatted: !0 });
            var n = this.n(this.natural, 12, { max: 12 }),
                i = 2 * n[11] + 3 * n[10] + 4 * n[9] + 5 * n[8] + 6 * n[7] + 7 * n[6] + 8 * n[5] + 9 * n[4] + 2 * n[3] + 3 * n[2] + 4 * n[1] + 5 * n[0];
            (i = 11 - (i % 11)) < 2 && (i = 0);
            var r = 2 * i + 3 * n[11] + 4 * n[10] + 5 * n[9] + 6 * n[8] + 7 * n[7] + 8 * n[6] + 9 * n[5] + 2 * n[4] + 3 * n[3] + 4 * n[2] + 5 * n[1] + 6 * n[0];
            (r = 11 - (r % 11)) < 2 && (r = 0);
            var o = "" + n[0] + n[1] + "." + n[2] + n[3] + n[4] + "." + n[5] + n[6] + n[7] + "/" + n[8] + n[9] + n[10] + n[11] + "-" + i + r;
            return a.formatted ? o : o.replace(/\D/g, "");
        }),
        (a.prototype.first = function (a) {
            return (a = e(a, { gender: this.gender(), nationality: "en" })), this.pick(this.get("firstNames")[a.gender.toLowerCase()][a.nationality.toLowerCase()]);
        }),
        (a.prototype.profession = function (a) {
            return (a = e(a)).rank ? this.pick(["Apprentice ", "Junior ", "Senior ", "Lead "]) + this.pick(this.get("profession")) : this.pick(this.get("profession"));
        }),
        (a.prototype.company = function () {
            return this.pick(this.get("company"));
        }),
        (a.prototype.gender = function (a) {
            return (a = e(a, { extraGenders: [] })), this.pick(["Male", "Female"].concat(a.extraGenders));
        }),
        (a.prototype.last = function (a) {
            return (a = e(a, { nationality: "en" })), this.pick(this.get("lastNames")[a.nationality.toLowerCase()]);
        }),
        (a.prototype.israelId = function () {
            for (var a = this.string({ pool: "0123456789", length: 8 }), e = 0, n = 0; n < a.length; n++) {
                var i = a[n] * (n / 2 === parseInt(n / 2) ? 1 : 2);
                (i = this.pad(i, 2).toString()), (e += i = parseInt(i[0]) + parseInt(i[1]));
            }
            return (a += (10 - parseInt(e.toString().slice(-1))).toString().slice(-1));
        }),
        (a.prototype.mrz = function (a) {
            var n = function (a) {
                    var e = "<ABCDEFGHIJKLMNOPQRSTUVWXYXZ".split(""),
                        n = [7, 3, 1],
                        i = 0;
                    return (
                        "string" != typeof a && (a = a.toString()),
                        a.split("").forEach(function (a, r) {
                            var o = e.indexOf(a);
                            (a = -1 !== o ? (0 === o ? 0 : o + 9) : parseInt(a, 10)), (i += a *= n[r % n.length]);
                        }),
                        i % 10
                    );
                },
                i = this;
            return (
                (a = e(a, {
                    first: this.first(),
                    last: this.last(),
                    passportNumber: this.integer({ min: 1e8, max: 999999999 }),
                    dob: (function () {
                        var a = i.birthday({ type: "adult" });
                        return [a.getFullYear().toString().substr(2), i.pad(a.getMonth() + 1, 2), i.pad(a.getDate(), 2)].join("");
                    })(),
                    expiry: (function () {
                        var a = new Date();
                        return [(a.getFullYear() + 5).toString().substr(2), i.pad(a.getMonth() + 1, 2), i.pad(a.getDate(), 2)].join("");
                    })(),
                    gender: "Female" === this.gender() ? "F" : "M",
                    issuer: "GBR",
                    nationality: "GBR",
                })),
                (function (a) {
                    var e = function (a) {
                            return new Array(a + 1).join("<");
                        },
                        i = [
                            "P<",
                            a.issuer,
                            a.last.toUpperCase(),
                            "<<",
                            a.first.toUpperCase(),
                            e(39 - (a.last.length + a.first.length + 2)),
                            a.passportNumber,
                            n(a.passportNumber),
                            a.nationality,
                            a.dob,
                            n(a.dob),
                            a.gender,
                            a.expiry,
                            n(a.expiry),
                            e(14),
                            n(e(14)),
                        ].join("");
                    return i + n(i.substr(44, 10) + i.substr(57, 7) + i.substr(65, 7));
                })(a)
            );
        }),
        (a.prototype.name = function (a) {
            a = e(a);
            var n,
                i = this.first(a),
                r = this.last(a);
            return (
                (n = a.middle ? i + " " + this.first(a) + " " + r : a.middle_initial ? i + " " + this.character({ alpha: !0, casing: "upper" }) + ". " + r : i + " " + r),
                a.prefix && (n = this.prefix(a) + " " + n),
                a.suffix && (n = n + " " + this.suffix(a)),
                n
            );
        }),
        (a.prototype.name_prefixes = function (a) {
            var e = [{ name: "Doctor", abbreviation: "Dr." }];
            return (
                ("male" !== (a = (a = a || "all").toLowerCase()) && "all" !== a) || e.push({ name: "Mister", abbreviation: "Mr." }),
                ("female" !== a && "all" !== a) || (e.push({ name: "Miss", abbreviation: "Miss" }), e.push({ name: "Misses", abbreviation: "Mrs." })),
                e
            );
        }),
        (a.prototype.prefix = function (a) {
            return this.name_prefix(a);
        }),
        (a.prototype.name_prefix = function (a) {
            return (a = e(a, { gender: "all" })).full ? this.pick(this.name_prefixes(a.gender)).name : this.pick(this.name_prefixes(a.gender)).abbreviation;
        }),
        (a.prototype.HIDN = function () {
            var a = "";
            return (a += this.string({ pool: "0123456789", length: 6 })), (a += this.string({ pool: "ABCDEFGHIJKLMNOPQRSTUVWXYXZ", length: 2 }));
        }),
        (a.prototype.ssn = function (a) {
            var n = (a = e(a, { ssnFour: !1, dashes: !0 })).dashes ? "-" : "";
            return a.ssnFour ? this.string({ pool: "1234567890", length: 4 }) : this.string({ pool: "1234567890", length: 3 }) + n + this.string({ pool: "1234567890", length: 2 }) + n + this.string({ pool: "1234567890", length: 4 });
        }),
        (a.prototype.name_suffixes = function () {
            return [
                { name: "Doctor of Osteopathic Medicine", abbreviation: "D.O." },
                { name: "Doctor of Philosophy", abbreviation: "Ph.D." },
                { name: "Esquire", abbreviation: "Esq." },
                { name: "Junior", abbreviation: "Jr." },
                { name: "Juris Doctor", abbreviation: "J.D." },
                { name: "Master of Arts", abbreviation: "M.A." },
                { name: "Master of Business Administration", abbreviation: "M.B.A." },
                { name: "Master of Science", abbreviation: "M.S." },
                { name: "Medical Doctor", abbreviation: "M.D." },
                { name: "Senior", abbreviation: "Sr." },
                { name: "The Third", abbreviation: "III" },
                { name: "The Fourth", abbreviation: "IV" },
                { name: "Bachelor of Engineering", abbreviation: "B.E" },
                { name: "Bachelor of Technology", abbreviation: "B.TECH" },
            ];
        }),
        (a.prototype.suffix = function (a) {
            return this.name_suffix(a);
        }),
        (a.prototype.name_suffix = function (a) {
            return (a = e(a)).full ? this.pick(this.name_suffixes()).name : this.pick(this.name_suffixes()).abbreviation;
        }),
        (a.prototype.nationalities = function () {
            return this.get("nationalities");
        }),
        (a.prototype.nationality = function () {
            return this.pick(this.nationalities()).name;
        }),
        (a.prototype.android_id = function () {
            return "APA91" + this.string({ pool: "0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_", length: 178 });
        }),
        (a.prototype.apple_token = function () {
            return this.string({ pool: "abcdef1234567890", length: 64 });
        }),
        (a.prototype.wp8_anid2 = function () {
            return d(this.hash({ length: 32 }));
        }),
        (a.prototype.wp7_anid = function () {
            return "A=" + this.guid().replace(/-/g, "").toUpperCase() + "&E=" + this.hash({ length: 3 }) + "&W=" + this.integer({ min: 0, max: 9 });
        }),
        (a.prototype.bb_pin = function () {
            return this.hash({ length: 8 });
        }),
        (a.prototype.avatar = function (a) {
            var n = { protocol: null, email: null, fileExtension: null, size: null, fallback: null, rating: null };
            if (a)
                if ("string" == typeof a) (n.email = a), (a = {});
                else {
                    if ("object" != typeof a) return null;
                    if ("Array" === a.constructor) return null;
                }
            else (n.email = this.email()), (a = {});
            return (
                (n = e(a, n)).email || (n.email = this.email()),
                (n.protocol = { http: "http", https: "https" }[n.protocol] ? n.protocol + ":" : ""),
                (n.size = parseInt(n.size, 0) ? n.size : ""),
                (n.rating = { g: "g", pg: "pg", r: "r", x: "x" }[n.rating] ? n.rating : ""),
                (n.fallback = { 404: "404", mm: "mm", identicon: "identicon", monsterid: "monsterid", wavatar: "wavatar", retro: "retro", blank: "blank" }[n.fallback] ? n.fallback : ""),
                (n.fileExtension = { bmp: "bmp", gif: "gif", jpg: "jpg", png: "png" }[n.fileExtension] ? n.fileExtension : ""),
                n.protocol +
                    "//www.gravatar.com/avatar/" +
                    this.bimd5.md5(n.email) +
                    (n.fileExtension ? "." + n.fileExtension : "") +
                    (n.size || n.rating || n.fallback ? "?" : "") +
                    (n.size ? "&s=" + n.size.toString() : "") +
                    (n.rating ? "&r=" + n.rating : "") +
                    (n.fallback ? "&d=" + n.fallback : "")
            );
        }),
        (a.prototype.color = function (a) {
            function n(a, e) {
                return [a, a, a].join(e || "");
            }
            function i(a) {
                var e = a ? "rgba" : "rgb",
                    i = a ? "," + this.floating({ min: b, max: p }) : "";
                return e + "(" + (o ? n(this.natural({ min: t, max: s }), ",") : this.natural({ min: m, max: u }) + "," + this.natural({ min: d, max: h }) + "," + this.natural({ max: 255 })) + i + ")";
            }
            function r(e, i, r) {
                var b = r ? "#" : "",
                    p = "";
                return (
                    o
                        ? ((p = n(this.pad(this.hex({ min: t, max: s }), 2))), "shorthex" === a.format && (p = n(this.hex({ min: 0, max: 15 }))))
                        : (p =
                              "shorthex" === a.format
                                  ? this.pad(this.hex({ min: Math.floor(l / 16), max: Math.floor(c / 16) }), 1) +
                                    this.pad(this.hex({ min: Math.floor(m / 16), max: Math.floor(u / 16) }), 1) +
                                    this.pad(this.hex({ min: Math.floor(d / 16), max: Math.floor(h / 16) }), 1)
                                  : void 0 !== l || void 0 !== c || void 0 !== m || void 0 !== u || void 0 !== d || void 0 !== h
                                  ? this.pad(this.hex({ min: l, max: c }), 2) + this.pad(this.hex({ min: m, max: u }), 2) + this.pad(this.hex({ min: d, max: h }), 2)
                                  : this.pad(this.hex({ min: t, max: s }), 2) + this.pad(this.hex({ min: t, max: s }), 2) + this.pad(this.hex({ min: t, max: s }), 2)),
                    b + p
                );
            }
            var o = (a = e(a, {
                    format: this.pick(["hex", "shorthex", "rgb", "rgba", "0x", "name"]),
                    grayscale: !1,
                    casing: "lower",
                    min: 0,
                    max: 255,
                    min_red: void 0,
                    max_red: void 0,
                    min_green: void 0,
                    max_green: void 0,
                    min_blue: void 0,
                    max_blue: void 0,
                    min_alpha: 0,
                    max_alpha: 1,
                })).grayscale,
                t = a.min,
                s = a.max,
                l = a.min_red,
                c = a.max_red,
                m = a.min_green,
                u = a.max_green,
                d = a.min_blue,
                h = a.max_blue,
                b = a.min_alpha,
                p = a.max_alpha;
            void 0 === a.min_red && (l = t),
                void 0 === a.max_red && (c = s),
                void 0 === a.min_green && (m = t),
                void 0 === a.max_green && (u = s),
                void 0 === a.min_blue && (d = t),
                void 0 === a.max_blue && (h = s),
                void 0 === a.min_alpha && (b = 0),
                void 0 === a.max_alpha && (p = 1),
                o && 0 === t && 255 === s && void 0 !== l && void 0 !== c && ((t = (l + m + d) / 3), (s = (c + u + h) / 3));
            var C;
            if ("hex" === a.format) C = r.call(this, 2, 6, !0);
            else if ("shorthex" === a.format) C = r.call(this, 1, 3, !0);
            else if ("rgb" === a.format) C = i.call(this, !1);
            else if ("rgba" === a.format) C = i.call(this, !0);
            else {
                if ("0x" !== a.format) {
                    if ("name" === a.format) return this.pick(this.get("colorNames"));
                    throw new RangeError('Invalid format provided. Please provide one of "hex", "shorthex", "rgb", "rgba", "0x" or "name".');
                }
                C = "0x" + r.call(this, 2, 6);
            }
            return "upper" === a.casing && (C = C.toUpperCase()), C;
        }),
        (a.prototype.domain = function (a) {
            return (a = e(a)), this.word() + "." + (a.tld || this.tld());
        }),
        (a.prototype.email = function (a) {
            return (a = e(a)), this.word({ length: a.length }) + "@" + (a.domain || this.domain());
        }),
        (a.prototype.fbid = function () {
            return "10000" + this.string({ pool: "1234567890", length: 11 });
        }),
        (a.prototype.google_analytics = function () {
            return "UA-" + this.pad(this.natural({ max: 999999 }), 6) + "-" + this.pad(this.natural({ max: 99 }), 2);
        }),
        (a.prototype.hashtag = function () {
            return "#" + this.word();
        }),
        (a.prototype.ip = function () {
            return this.natural({ min: 1, max: 254 }) + "." + this.natural({ max: 255 }) + "." + this.natural({ max: 255 }) + "." + this.natural({ min: 1, max: 254 });
        }),
        (a.prototype.ipv6 = function () {
            return this.n(this.hash, 8, { length: 4 }).join(":");
        }),
        (a.prototype.klout = function () {
            return this.natural({ min: 1, max: 99 });
        }),
        (a.prototype.semver = function (a) {
            a = e(a, { include_prerelease: !0 });
            var n = this.pickone(["^", "~", "<", ">", "<=", ">=", "="]);
            a.range && (n = a.range);
            var i = "";
            return a.include_prerelease && (i = this.weighted(["", "-dev", "-beta", "-alpha"], [50, 10, 5, 1])), n + this.rpg("3d10").join(".") + i;
        }),
        (a.prototype.tlds = function () {
            return [
                "com",
                "org",
                "edu",
                "gov",
                "co.uk",
                "net",
                "io",
                "ac",
                "ad",
                "ae",
                "af",
                "ag",
                "ai",
                "al",
                "am",
                "an",
                "ao",
                "aq",
                "ar",
                "as",
                "at",
                "au",
                "aw",
                "ax",
                "az",
                "ba",
                "bb",
                "bd",
                "be",
                "bf",
                "bg",
                "bh",
                "bi",
                "bj",
                "bm",
                "bn",
                "bo",
                "bq",
                "br",
                "bs",
                "bt",
                "bv",
                "bw",
                "by",
                "bz",
                "ca",
                "cc",
                "cd",
                "cf",
                "cg",
                "ch",
                "ci",
                "ck",
                "cl",
                "cm",
                "cn",
                "co",
                "cr",
                "cu",
                "cv",
                "cw",
                "cx",
                "cy",
                "cz",
                "de",
                "dj",
                "dk",
                "dm",
                "do",
                "dz",
                "ec",
                "ee",
                "eg",
                "eh",
                "er",
                "es",
                "et",
                "eu",
                "fi",
                "fj",
                "fk",
                "fm",
                "fo",
                "fr",
                "ga",
                "gb",
                "gd",
                "ge",
                "gf",
                "gg",
                "gh",
                "gi",
                "gl",
                "gm",
                "gn",
                "gp",
                "gq",
                "gr",
                "gs",
                "gt",
                "gu",
                "gw",
                "gy",
                "hk",
                "hm",
                "hn",
                "hr",
                "ht",
                "hu",
                "id",
                "ie",
                "il",
                "im",
                "in",
                "io",
                "iq",
                "ir",
                "is",
                "it",
                "je",
                "jm",
                "jo",
                "jp",
                "ke",
                "kg",
                "kh",
                "ki",
                "km",
                "kn",
                "kp",
                "kr",
                "kw",
                "ky",
                "kz",
                "la",
                "lb",
                "lc",
                "li",
                "lk",
                "lr",
                "ls",
                "lt",
                "lu",
                "lv",
                "ly",
                "ma",
                "mc",
                "md",
                "me",
                "mg",
                "mh",
                "mk",
                "ml",
                "mm",
                "mn",
                "mo",
                "mp",
                "mq",
                "mr",
                "ms",
                "mt",
                "mu",
                "mv",
                "mw",
                "mx",
                "my",
                "mz",
                "na",
                "nc",
                "ne",
                "nf",
                "ng",
                "ni",
                "nl",
                "no",
                "np",
                "nr",
                "nu",
                "nz",
                "om",
                "pa",
                "pe",
                "pf",
                "pg",
                "ph",
                "pk",
                "pl",
                "pm",
                "pn",
                "pr",
                "ps",
                "pt",
                "pw",
                "py",
                "qa",
                "re",
                "ro",
                "rs",
                "ru",
                "rw",
                "sa",
                "sb",
                "sc",
                "sd",
                "se",
                "sg",
                "sh",
                "si",
                "sj",
                "sk",
                "sl",
                "sm",
                "sn",
                "so",
                "sr",
                "ss",
                "st",
                "su",
                "sv",
                "sx",
                "sy",
                "sz",
                "tc",
                "td",
                "tf",
                "tg",
                "th",
                "tj",
                "tk",
                "tl",
                "tm",
                "tn",
                "to",
                "tp",
                "tr",
                "tt",
                "tv",
                "tw",
                "tz",
                "ua",
                "ug",
                "uk",
                "us",
                "uy",
                "uz",
                "va",
                "vc",
                "ve",
                "vg",
                "vi",
                "vn",
                "vu",
                "wf",
                "ws",
                "ye",
                "yt",
                "za",
                "zm",
                "zw",
            ];
        }),
        (a.prototype.tld = function () {
            return this.pick(this.tlds());
        }),
        (a.prototype.twitter = function () {
            return "@" + this.word();
        }),
        (a.prototype.url = function (a) {
            var n = (a = e(a, { protocol: "http", domain: this.domain(a), domain_prefix: "", path: this.word(), extensions: [] })).extensions.length > 0 ? "." + this.pick(a.extensions) : "",
                i = a.domain_prefix ? a.domain_prefix + "." + a.domain : a.domain;
            return a.protocol + "://" + i + "/" + a.path + n;
        }),
        (a.prototype.port = function () {
            return this.integer({ min: 0, max: 65535 });
        }),
        (a.prototype.locale = function (a) {
            return (a = e(a)).region ? this.pick(this.get("locale_regions")) : this.pick(this.get("locale_languages"));
        }),
        (a.prototype.locales = function (a) {
            return (a = e(a)).region ? this.get("locale_regions") : this.get("locale_languages");
        }),
        (a.prototype.address = function (a) {
            return (a = e(a)), this.natural({ min: 5, max: 2e3 }) + " " + this.street(a);
        }),
        (a.prototype.altitude = function (a) {
            return (a = e(a, { fixed: 5, min: 0, max: 8848 })), this.floating({ min: a.min, max: a.max, fixed: a.fixed });
        }),
        (a.prototype.areacode = function (a) {
            a = e(a, { parens: !0 });
            var n = this.natural({ min: 2, max: 9 }).toString() + this.natural({ min: 0, max: 8 }).toString() + this.natural({ min: 0, max: 9 }).toString();
            return a.parens ? "(" + n + ")" : n;
        }),
        (a.prototype.city = function () {
            return this.capitalize(this.word({ syllables: 3 }));
        }),
        (a.prototype.coordinates = function (a) {
            return this.latitude(a) + ", " + this.longitude(a);
        }),
        (a.prototype.countries = function () {
            return this.get("countries");
        }),
        (a.prototype.country = function (a) {
            a = e(a);
            var n = this.pick(this.countries());
            return a.full ? n.name : n.abbreviation;
        }),
        (a.prototype.depth = function (a) {
            return (a = e(a, { fixed: 5, min: -10994, max: 0 })), this.floating({ min: a.min, max: a.max, fixed: a.fixed });
        }),
        (a.prototype.geohash = function (a) {
            return (a = e(a, { length: 7 })), this.string({ length: a.length, pool: "0123456789bcdefghjkmnpqrstuvwxyz" });
        }),
        (a.prototype.geojson = function (a) {
            return this.latitude(a) + ", " + this.longitude(a) + ", " + this.altitude(a);
        }),
        (a.prototype.latitude = function (a) {
            return (a = e(a, { fixed: 5, min: -90, max: 90 })), this.floating({ min: a.min, max: a.max, fixed: a.fixed });
        }),
        (a.prototype.longitude = function (a) {
            return (a = e(a, { fixed: 5, min: -180, max: 180 })), this.floating({ min: a.min, max: a.max, fixed: a.fixed });
        }),
        (a.prototype.phone = function (a) {
            var n,
                i = this,
                r = function (a) {
                    var e = [];
                    return (
                        a.sections.forEach(function (a) {
                            e.push(i.string({ pool: "0123456789", length: a }));
                        }),
                        a.area + e.join(" ")
                    );
                };
            (a = e(a, { formatted: !0, country: "us", mobile: !1 })).formatted || (a.parens = !1);
            var o;
            switch (a.country) {
                case "fr":
                    a.mobile
                        ? ((n = this.pick(["06", "07"]) + i.string({ pool: "0123456789", length: 8 })), (o = a.formatted ? n.match(/../g).join(" ") : n))
                        : ((n = this.pick([
                              "01" +
                                  this.pick([
                                      "30",
                                      "34",
                                      "39",
                                      "40",
                                      "41",
                                      "42",
                                      "43",
                                      "44",
                                      "45",
                                      "46",
                                      "47",
                                      "48",
                                      "49",
                                      "53",
                                      "55",
                                      "56",
                                      "58",
                                      "60",
                                      "64",
                                      "69",
                                      "70",
                                      "72",
                                      "73",
                                      "74",
                                      "75",
                                      "76",
                                      "77",
                                      "78",
                                      "79",
                                      "80",
                                      "81",
                                      "82",
                                      "83",
                                  ]) +
                                  i.string({ pool: "0123456789", length: 6 }),
                              "02" +
                                  this.pick([
                                      "14",
                                      "18",
                                      "22",
                                      "23",
                                      "28",
                                      "29",
                                      "30",
                                      "31",
                                      "32",
                                      "33",
                                      "34",
                                      "35",
                                      "36",
                                      "37",
                                      "38",
                                      "40",
                                      "41",
                                      "43",
                                      "44",
                                      "45",
                                      "46",
                                      "47",
                                      "48",
                                      "49",
                                      "50",
                                      "51",
                                      "52",
                                      "53",
                                      "54",
                                      "56",
                                      "57",
                                      "61",
                                      "62",
                                      "69",
                                      "72",
                                      "76",
                                      "77",
                                      "78",
                                      "85",
                                      "90",
                                      "96",
                                      "97",
                                      "98",
                                      "99",
                                  ]) +
                                  i.string({ pool: "0123456789", length: 6 }),
                              "03" +
                                  this.pick([
                                      "10",
                                      "20",
                                      "21",
                                      "22",
                                      "23",
                                      "24",
                                      "25",
                                      "26",
                                      "27",
                                      "28",
                                      "29",
                                      "39",
                                      "44",
                                      "45",
                                      "51",
                                      "52",
                                      "54",
                                      "55",
                                      "57",
                                      "58",
                                      "59",
                                      "60",
                                      "61",
                                      "62",
                                      "63",
                                      "64",
                                      "65",
                                      "66",
                                      "67",
                                      "68",
                                      "69",
                                      "70",
                                      "71",
                                      "72",
                                      "73",
                                      "80",
                                      "81",
                                      "82",
                                      "83",
                                      "84",
                                      "85",
                                      "86",
                                      "87",
                                      "88",
                                      "89",
                                      "90",
                                  ]) +
                                  i.string({ pool: "0123456789", length: 6 }),
                              "04" +
                                  this.pick([
                                      "11",
                                      "13",
                                      "15",
                                      "20",
                                      "22",
                                      "26",
                                      "27",
                                      "30",
                                      "32",
                                      "34",
                                      "37",
                                      "42",
                                      "43",
                                      "44",
                                      "50",
                                      "56",
                                      "57",
                                      "63",
                                      "66",
                                      "67",
                                      "68",
                                      "69",
                                      "70",
                                      "71",
                                      "72",
                                      "73",
                                      "74",
                                      "75",
                                      "76",
                                      "77",
                                      "78",
                                      "79",
                                      "80",
                                      "81",
                                      "82",
                                      "83",
                                      "84",
                                      "85",
                                      "86",
                                      "88",
                                      "89",
                                      "90",
                                      "91",
                                      "92",
                                      "93",
                                      "94",
                                      "95",
                                      "97",
                                      "98",
                                  ]) +
                                  i.string({ pool: "0123456789", length: 6 }),
                              "05" +
                                  this.pick([
                                      "08",
                                      "16",
                                      "17",
                                      "19",
                                      "24",
                                      "31",
                                      "32",
                                      "33",
                                      "34",
                                      "35",
                                      "40",
                                      "45",
                                      "46",
                                      "47",
                                      "49",
                                      "53",
                                      "55",
                                      "56",
                                      "57",
                                      "58",
                                      "59",
                                      "61",
                                      "62",
                                      "63",
                                      "64",
                                      "65",
                                      "67",
                                      "79",
                                      "81",
                                      "82",
                                      "86",
                                      "87",
                                      "90",
                                      "94",
                                  ]) +
                                  i.string({ pool: "0123456789", length: 6 }),
                              "09" + i.string({ pool: "0123456789", length: 8 }),
                          ])),
                          (o = a.formatted ? n.match(/../g).join(" ") : n));
                    break;
                case "uk":
                    a.mobile
                        ? ((n = this.pick([
                              { area: "07" + this.pick(["4", "5", "7", "8", "9"]), sections: [2, 6] },
                              { area: "07624 ", sections: [6] },
                          ])),
                          (o = a.formatted ? r(n) : r(n).replace(" ", "")))
                        : ((n = this.pick([
                              { area: "01" + this.character({ pool: "234569" }) + "1 ", sections: [3, 4] },
                              { area: "020 " + this.character({ pool: "378" }), sections: [3, 4] },
                              { area: "023 " + this.character({ pool: "89" }), sections: [3, 4] },
                              { area: "024 7", sections: [3, 4] },
                              { area: "028 " + this.pick(["25", "28", "37", "71", "82", "90", "92", "95"]), sections: [2, 4] },
                              { area: "012" + this.pick(["04", "08", "54", "76", "97", "98"]) + " ", sections: [6] },
                              { area: "013" + this.pick(["63", "64", "84", "86"]) + " ", sections: [6] },
                              { area: "014" + this.pick(["04", "20", "60", "61", "80", "88"]) + " ", sections: [6] },
                              { area: "015" + this.pick(["24", "27", "62", "66"]) + " ", sections: [6] },
                              { area: "016" + this.pick(["06", "29", "35", "47", "59", "95"]) + " ", sections: [6] },
                              { area: "017" + this.pick(["26", "44", "50", "68"]) + " ", sections: [6] },
                              { area: "018" + this.pick(["27", "37", "84", "97"]) + " ", sections: [6] },
                              { area: "019" + this.pick(["00", "05", "35", "46", "49", "63", "95"]) + " ", sections: [6] },
                          ])),
                          (o = a.formatted ? r(n) : r(n).replace(" ", "", "g")));
                    break;
                case "za":
                    a.mobile
                        ? ((n = this.pick([
                              "060" + this.pick(["3", "4", "5", "6", "7", "8", "9"]) + i.string({ pool: "0123456789", length: 6 }),
                              "061" + this.pick(["0", "1", "2", "3", "4", "5", "8"]) + i.string({ pool: "0123456789", length: 6 }),
                              "06" + i.string({ pool: "0123456789", length: 7 }),
                              "071" + this.pick(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]) + i.string({ pool: "0123456789", length: 6 }),
                              "07" + this.pick(["2", "3", "4", "6", "7", "8", "9"]) + i.string({ pool: "0123456789", length: 7 }),
                              "08" + this.pick(["0", "1", "2", "3", "4", "5"]) + i.string({ pool: "0123456789", length: 7 }),
                          ])),
                          (o = a.formatted || n))
                        : ((n = this.pick([
                              "01" + this.pick(["0", "1", "2", "3", "4", "5", "6", "7", "8"]) + i.string({ pool: "0123456789", length: 7 }),
                              "02" + this.pick(["1", "2", "3", "4", "7", "8"]) + i.string({ pool: "0123456789", length: 7 }),
                              "03" + this.pick(["1", "2", "3", "5", "6", "9"]) + i.string({ pool: "0123456789", length: 7 }),
                              "04" + this.pick(["1", "2", "3", "4", "5", "6", "7", "8", "9"]) + i.string({ pool: "0123456789", length: 7 }),
                              "05" + this.pick(["1", "3", "4", "6", "7", "8"]) + i.string({ pool: "0123456789", length: 7 }),
                          ])),
                          (o = a.formatted || n));
                    break;
                case "us":
                    var t = this.areacode(a).toString(),
                        s = this.natural({ min: 2, max: 9 }).toString() + this.natural({ min: 0, max: 9 }).toString() + this.natural({ min: 0, max: 9 }).toString(),
                        l = this.natural({ min: 1e3, max: 9999 }).toString();
                    o = a.formatted ? t + " " + s + "-" + l : t + s + l;
            }
            return o;
        }),
        (a.prototype.postal = function () {
            return (
                this.character({ pool: "XVTSRPNKLMHJGECBA" }) +
                this.natural({ max: 9 }) +
                this.character({ alpha: !0, casing: "upper" }) +
                " " +
                (this.natural({ max: 9 }) + this.character({ alpha: !0, casing: "upper" }) + this.natural({ max: 9 }))
            );
        }),
        (a.prototype.counties = function (a) {
            return (a = e(a, { country: "uk" })), this.get("counties")[a.country.toLowerCase()];
        }),
        (a.prototype.county = function (a) {
            return this.pick(this.counties(a)).name;
        }),
        (a.prototype.provinces = function (a) {
            return (a = e(a, { country: "ca" })), this.get("provinces")[a.country.toLowerCase()];
        }),
        (a.prototype.province = function (a) {
            return a && a.full ? this.pick(this.provinces(a)).name : this.pick(this.provinces(a)).abbreviation;
        }),
        (a.prototype.state = function (a) {
            return a && a.full ? this.pick(this.states(a)).name : this.pick(this.states(a)).abbreviation;
        }),
        (a.prototype.states = function (a) {
            var n;
            switch ((a = e(a, { country: "us", us_states_and_dc: !0 })).country.toLowerCase()) {
                case "us":
                    var i = this.get("us_states_and_dc"),
                        r = this.get("territories"),
                        o = this.get("armed_forces");
                    (n = []), a.us_states_and_dc && (n = n.concat(i)), a.territories && (n = n.concat(r)), a.armed_forces && (n = n.concat(o));
                    break;
                case "it":
                    n = this.get("country_regions")[a.country.toLowerCase()];
                    break;
                case "uk":
                    n = this.get("counties")[a.country.toLowerCase()];
            }
            return n;
        }),
        (a.prototype.street = function (a) {
            var n;
            switch ((a = e(a, { country: "us", syllables: 2 })).country.toLowerCase()) {
                case "us":
                    (n = this.word({ syllables: a.syllables })), (n = this.capitalize(n)), (n += " "), (n += a.short_suffix ? this.street_suffix(a).abbreviation : this.street_suffix(a).name);
                    break;
                case "it":
                    (n = this.word({ syllables: a.syllables })), (n = this.capitalize(n)), (n = (a.short_suffix ? this.street_suffix(a).abbreviation : this.street_suffix(a).name) + " " + n);
            }
            return n;
        }),
        (a.prototype.street_suffix = function (a) {
            return (a = e(a, { country: "us" })), this.pick(this.street_suffixes(a));
        }),
        (a.prototype.street_suffixes = function (a) {
            return (a = e(a, { country: "us" })), this.get("street_suffixes")[a.country.toLowerCase()];
        }),
        (a.prototype.zip = function (a) {
            var e = this.n(this.natural, 5, { max: 9 });
            return a && !0 === a.plusfour && (e.push("-"), (e = e.concat(this.n(this.natural, 4, { max: 9 })))), e.join("");
        }),
        (a.prototype.ampm = function () {
            return this.bool() ? "am" : "pm";
        }),
        (a.prototype.date = function (a) {
            var n, i;
            if (a && (a.min || a.max)) {
                var r = void 0 !== (a = e(a, { american: !0, string: !1 })).min ? a.min.getTime() : 1,
                    o = void 0 !== a.max ? a.max.getTime() : 864e13;
                i = new Date(this.integer({ min: r, max: o }));
            } else {
                var t = this.month({ raw: !0 }),
                    s = t.days;
                a && a.month && (s = this.get("months")[((a.month % 12) + 12) % 12].days),
                    (a = e(a, {
                        year: parseInt(this.year(), 10),
                        month: t.numeric - 1,
                        day: this.natural({ min: 1, max: s }),
                        hour: this.hour({ twentyfour: !0 }),
                        minute: this.minute(),
                        second: this.second(),
                        millisecond: this.millisecond(),
                        american: !0,
                        string: !1,
                    })),
                    (i = new Date(a.year, a.month, a.day, a.hour, a.minute, a.second, a.millisecond));
            }
            return (n = a.american ? i.getMonth() + 1 + "/" + i.getDate() + "/" + i.getFullYear() : i.getDate() + "/" + (i.getMonth() + 1) + "/" + i.getFullYear()), a.string ? n : i;
        }),
        (a.prototype.hammertime = function (a) {
            return this.date(a).getTime();
        }),
        (a.prototype.hour = function (a) {
            return (
                (a = e(a, { min: a && a.twentyfour ? 0 : 1, max: a && a.twentyfour ? 23 : 12 })),
                n(a.min < 0, "Chance: Min cannot be less than 0."),
                n(a.twentyfour && a.max > 23, "Chance: Max cannot be greater than 23 for twentyfour option."),
                n(!a.twentyfour && a.max > 12, "Chance: Max cannot be greater than 12."),
                n(a.min > a.max, "Chance: Min cannot be greater than Max."),
                this.natural({ min: a.min, max: a.max })
            );
        }),
        (a.prototype.millisecond = function () {
            return this.natural({ max: 999 });
        }),
        (a.prototype.minute = a.prototype.second = function (a) {
            return (
                (a = e(a, { min: 0, max: 59 })),
                n(a.min < 0, "Chance: Min cannot be less than 0."),
                n(a.max > 59, "Chance: Max cannot be greater than 59."),
                n(a.min > a.max, "Chance: Min cannot be greater than Max."),
                this.natural({ min: a.min, max: a.max })
            );
        }),
        (a.prototype.month = function (a) {
            n((a = e(a, { min: 1, max: 12 })).min < 1, "Chance: Min cannot be less than 1."), n(a.max > 12, "Chance: Max cannot be greater than 12."), n(a.min > a.max, "Chance: Min cannot be greater than Max.");
            var i = this.pick(this.months().slice(a.min - 1, a.max));
            return a.raw ? i : i.name;
        }),
        (a.prototype.months = function () {
            return this.get("months");
        }),
        (a.prototype.second = function () {
            return this.natural({ max: 59 });
        }),
        (a.prototype.timestamp = function () {
            return this.natural({ min: 1, max: parseInt(new Date().getTime() / 1e3, 10) });
        }),
        (a.prototype.weekday = function (a) {
            var n = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"];
            return (a = e(a, { weekday_only: !1 })).weekday_only || (n.push("Saturday"), n.push("Sunday")), this.pickone(n);
        }),
        (a.prototype.year = function (a) {
            return (a = e(a, { min: new Date().getFullYear() })), (a.max = void 0 !== a.max ? a.max : a.min + 100), this.natural(a).toString();
        }),
        (a.prototype.cc = function (a) {
            var n, i, r;
            return (
                (n = (a = e(a)).type ? this.cc_type({ name: a.type, raw: !0 }) : this.cc_type({ raw: !0 })),
                (i = n.prefix.split("")),
                (r = n.length - n.prefix.length - 1),
                (i = i.concat(this.n(this.integer, r, { min: 0, max: 9 }))).push(this.luhn_calculate(i.join(""))),
                i.join("")
            );
        }),
        (a.prototype.cc_types = function () {
            return this.get("cc_types");
        }),
        (a.prototype.cc_type = function (a) {
            a = e(a);
            var n = this.cc_types(),
                i = null;
            if (a.name) {
                for (var r = 0; r < n.length; r++)
                    if (n[r].name === a.name || n[r].short_name === a.name) {
                        i = n[r];
                        break;
                    }
                if (null === i) throw new RangeError("Chance: Credit card type '" + a.name + "' is not supported");
            } else i = this.pick(n);
            return a.raw ? i : i.name;
        }),
        (a.prototype.currency_types = function () {
            return this.get("currency_types");
        }),
        (a.prototype.currency = function () {
            return this.pick(this.currency_types());
        }),
        (a.prototype.timezones = function () {
            return this.get("timezones");
        }),
        (a.prototype.timezone = function () {
            return this.pick(this.timezones());
        }),
        (a.prototype.currency_pair = function (a) {
            var e = this.unique(this.currency, 2, {
                comparator: function (a, e) {
                    return a.reduce(function (a, n) {
                        return a || n.code === e.code;
                    }, !1);
                },
            });
            return a ? e[0].code + "/" + e[1].code : e;
        }),
        (a.prototype.dollar = function (a) {
            a = e(a, { max: 1e4, min: 0 });
            var n = this.floating({ min: a.min, max: a.max, fixed: 2 }).toString(),
                i = n.split(".")[1];
            return void 0 === i ? (n += ".00") : i.length < 2 && (n += "0"), n < 0 ? "-$" + n.replace("-", "") : "$" + n;
        }),
        (a.prototype.euro = function (a) {
            return Number(this.dollar(a).replace("$", "")).toLocaleString() + "€";
        }),
        (a.prototype.exp = function (a) {
            a = e(a);
            var n = {};
            return (n.year = this.exp_year()), n.year === new Date().getFullYear().toString() ? (n.month = this.exp_month({ future: !0 })) : (n.month = this.exp_month()), a.raw ? n : n.month + "/" + n.year;
        }),
        (a.prototype.exp_month = function (a) {
            a = e(a);
            var n,
                i,
                r = new Date().getMonth() + 1;
            if (a.future && 12 !== r)
                do {
                    (n = this.month({ raw: !0 }).numeric), (i = parseInt(n, 10));
                } while (i <= r);
            else n = this.month({ raw: !0 }).numeric;
            return n;
        }),
        (a.prototype.exp_year = function () {
            var a = new Date().getMonth() + 1,
                e = new Date().getFullYear();
            return this.year({ min: 12 === a ? e + 1 : e, max: e + 10 });
        }),
        (a.prototype.vat = function (a) {
            switch ((a = e(a, { country: "it" })).country.toLowerCase()) {
                case "it":
                    return this.it_vat();
            }
        }),
        (a.prototype.iban = function () {
            var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
            return (
                this.string({ length: 2, pool: a }) + this.pad(this.integer({ min: 0, max: 99 }), 2) + this.string({ length: 4, pool: "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" }) + this.pad(this.natural(), this.natural({ min: 6, max: 26 }))
            );
        }),
        (a.prototype.it_vat = function () {
            var a = this.natural({ min: 1, max: 18e5 });
            return (a = this.pad(a, 7) + this.pad(this.pick(this.provinces({ country: "it" })).code, 3)) + this.luhn_calculate(a);
        }),
        (a.prototype.cf = function (a) {
            var e = (a = a || {}).gender ? a.gender : this.gender(),
                n = a.first ? a.first : this.first({ gender: e, nationality: "it" }),
                i = a.last ? a.last : this.last({ nationality: "it" }),
                r = a.birthday ? a.birthday : this.birthday(),
                o = a.city ? a.city : this.pickone(["A", "B", "C", "D", "E", "F", "G", "H", "I", "L", "M", "Z"]) + this.pad(this.natural({ max: 999 }), 3),
                t = [],
                s = function (a, e) {
                    var n,
                        i = [];
                    return (
                        a.length < 3
                            ? (i = a.split("").concat("XXX".split("")).splice(0, 3))
                            : ((n = a
                                  .toUpperCase()
                                  .split("")
                                  .map(function (a) {
                                      return -1 !== "BCDFGHJKLMNPRSTVWZ".indexOf(a) ? a : void 0;
                                  })
                                  .join("")).length > 3 && (n = e ? n.substr(0, 3) : n[0] + n.substr(2, 2)),
                              n.length < 3 &&
                                  ((i = n),
                                  (n = a
                                      .toUpperCase()
                                      .split("")
                                      .map(function (a) {
                                          return -1 !== "AEIOU".indexOf(a) ? a : void 0;
                                      })
                                      .join("")
                                      .substr(0, 3 - i.length))),
                              (i += n)),
                        i
                    );
                };
            return (
                (t = t
                    .concat(
                        s(i, !0),
                        s(n),
                        (function (a, e, n) {
                            return a.getFullYear().toString().substr(2) + ["A", "B", "C", "D", "E", "H", "L", "M", "P", "R", "S", "T"][a.getMonth()] + n.pad(a.getDate() + ("female" === e.toLowerCase() ? 40 : 0), 2);
                        })(r, e, this),
                        o.toUpperCase().split("")
                    )
                    .join("")),
                (t += (function (a) {
                    for (var e = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ", n = "ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ", i = "ABCDEFGHIJKLMNOPQRSTUVWXYZ", r = 0, o = 0; o < 15; o++)
                        r += o % 2 != 0 ? i.indexOf(n[e.indexOf(a[o])]) : "BAKPLCQDREVOSFTGUHMINJWZYX".indexOf(n[e.indexOf(a[o])]);
                    return i[r % 26];
                })(t.toUpperCase())).toUpperCase()
            );
        }),
        (a.prototype.pl_pesel = function () {
            for (var a = this.natural({ min: 1, max: 9999999999 }), e = this.pad(a, 10).split(""), n = 0; n < e.length; n++) e[n] = parseInt(e[n]);
            var i = (1 * e[0] + 3 * e[1] + 7 * e[2] + 9 * e[3] + 1 * e[4] + 3 * e[5] + 7 * e[6] + 9 * e[7] + 1 * e[8] + 3 * e[9]) % 10;
            return 0 !== i && (i = 10 - i), e.join("") + i;
        }),
        (a.prototype.pl_nip = function () {
            for (var a = this.natural({ min: 1, max: 999999999 }), e = this.pad(a, 9).split(""), n = 0; n < e.length; n++) e[n] = parseInt(e[n]);
            var i = (6 * e[0] + 5 * e[1] + 7 * e[2] + 2 * e[3] + 3 * e[4] + 4 * e[5] + 5 * e[6] + 6 * e[7] + 7 * e[8]) % 11;
            return 10 === i ? this.pl_nip() : e.join("") + i;
        }),
        (a.prototype.pl_regon = function () {
            for (var a = this.natural({ min: 1, max: 99999999 }), e = this.pad(a, 8).split(""), n = 0; n < e.length; n++) e[n] = parseInt(e[n]);
            var i = (8 * e[0] + 9 * e[1] + 2 * e[2] + 3 * e[3] + 4 * e[4] + 5 * e[5] + 6 * e[6] + 7 * e[7]) % 11;
            return 10 === i && (i = 0), e.join("") + i;
        }),
        (a.prototype.note = function (a) {
            a = e(a, { notes: "flatKey" });
            var n = { naturals: ["C", "D", "E", "F", "G", "A", "B"], flats: ["D♭", "E♭", "G♭", "A♭", "B♭"], sharps: ["C♯", "D♯", "F♯", "G♯", "A♯"] };
            return (n.all = n.naturals.concat(n.flats.concat(n.sharps))), (n.flatKey = n.naturals.concat(n.flats)), (n.sharpKey = n.naturals.concat(n.sharps)), this.pickone(n[a.notes]);
        }),
        (a.prototype.midi_note = function (a) {
            return (a = e(a, { min: 0, max: 127 })), this.integer({ min: a.min, max: a.max });
        }),
        (a.prototype.chord_quality = function (a) {
            var n = ["maj", "min", "aug", "dim"];
            return (a = e(a, { jazz: !0 })).jazz && (n = ["maj7", "min7", "7", "sus", "dim", "ø"]), this.pickone(n);
        }),
        (a.prototype.chord = function (a) {
            return (a = e(a)), this.note(a) + this.chord_quality(a);
        }),
        (a.prototype.tempo = function (a) {
            return (a = e(a, { min: 40, max: 320 })), this.integer({ min: a.min, max: a.max });
        }),
        (a.prototype.coin = function (a) {
            return this.bool() ? "heads" : "tails";
        }),
        (a.prototype.d4 = i({ min: 1, max: 4 })),
        (a.prototype.d6 = i({ min: 1, max: 6 })),
        (a.prototype.d8 = i({ min: 1, max: 8 })),
        (a.prototype.d10 = i({ min: 1, max: 10 })),
        (a.prototype.d12 = i({ min: 1, max: 12 })),
        (a.prototype.d20 = i({ min: 1, max: 20 })),
        (a.prototype.d30 = i({ min: 1, max: 30 })),
        (a.prototype.d100 = i({ min: 1, max: 100 })),
        (a.prototype.rpg = function (a, n) {
            if (((n = e(n)), a)) {
                var i = a.toLowerCase().split("d"),
                    r = [];
                if (2 !== i.length || !parseInt(i[0], 10) || !parseInt(i[1], 10)) throw new Error("Chance: Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");
                for (var o = i[0]; o > 0; o--) r[o - 1] = this.natural({ min: 1, max: i[1] });
                return void 0 !== n.sum && n.sum
                    ? r.reduce(function (a, e) {
                          return a + e;
                      })
                    : r;
            }
            throw new RangeError("Chance: A type of die roll must be included");
        }),
        (a.prototype.guid = function (a) {
            a = e(a, { version: 5 });
            var n = "abcdef1234567890";
            return (
                this.string({ pool: n, length: 8 }) +
                "-" +
                this.string({ pool: n, length: 4 }) +
                "-" +
                a.version +
                this.string({ pool: n, length: 3 }) +
                "-" +
                this.string({ pool: "ab89", length: 1 }) +
                this.string({ pool: n, length: 3 }) +
                "-" +
                this.string({ pool: n, length: 12 })
            );
        }),
        (a.prototype.hash = function (a) {
            var n = "upper" === (a = e(a, { length: 40, casing: "lower" })).casing ? m.toUpperCase() : m;
            return this.string({ pool: n, length: a.length });
        }),
        (a.prototype.luhn_check = function (a) {
            var e = a.toString();
            return +e.substring(e.length - 1) === this.luhn_calculate(+e.substring(0, e.length - 1));
        }),
        (a.prototype.luhn_calculate = function (a) {
            for (var e, n = a.toString().split("").reverse(), i = 0, r = 0, o = n.length; o > r; ++r) (e = +n[r]), r % 2 == 0 && (e *= 2) > 9 && (e -= 9), (i += e);
            return (9 * i) % 10;
        }),
        (a.prototype.md5 = function (a) {
            var n = { str: "", key: null, raw: !1 };
            if (a)
                if ("string" == typeof a) (n.str = a), (a = {});
                else {
                    if ("object" != typeof a) return null;
                    if ("Array" === a.constructor) return null;
                }
            else (n.str = this.string()), (a = {});
            if (!(n = e(a, n)).str) throw new Error("A parameter is required to return an md5 hash.");
            return this.bimd5.md5(n.str, n.key, n.raw);
        }),
        (a.prototype.file = function (a) {
            var e,
                n,
                i = a || {},
                r = Object.keys(this.get("fileExtension"));
            if (((e = this.word({ length: i.length })), i.extension)) return (n = i.extension), e + "." + n;
            if (i.extensions) {
                if (Array.isArray(i.extensions)) return (n = this.pickone(i.extensions)), e + "." + n;
                if (i.extensions.constructor === Object) {
                    var o = i.extensions,
                        t = Object.keys(o);
                    return (n = this.pickone(o[this.pickone(t)])), e + "." + n;
                }
                throw new Error("Chance: Extensions must be an Array or Object");
            }
            if (i.fileType) {
                var s = i.fileType;
                if (-1 !== r.indexOf(s)) return (n = this.pickone(this.get("fileExtension")[s])), e + "." + n;
                throw new RangeError("Chance: Expect file type value to be 'raster', 'vector', '3d' or 'document'");
            }
            return (n = this.pickone(this.get("fileExtension")[this.pickone(r)])), e + "." + n;
        });
    var h = [
        {
            id: '1',
            calendarId: '1',
            title: 'my schedule',
            category: 'time',
            dueDateClass: '',
            start: '2022-03-18T22:30:00+09:00',
            end: '2022-03-19T02:30:00+09:00'
        },
        {
            id: '2',
            calendarId: '1',
            title: 'second schedule',
            category: 'time',
            dueDateClass: '',
            start: '2022-04-20T17:30:00+09:00',
            end: '2022-04-21T17:31:00+09:00'
        }
    ],
        b = Object.prototype.hasOwnProperty,
        p =
            Object.keys ||
            function (a) {
                var e = [];
                for (var n in a) b.call(a, n) && e.push(n);
                return e;
            };
    (a.prototype.get = function (a) {
        return t(h[a]);
    }),
        (a.prototype.mac_address = function (a) {
            (a = e(a)).separator || (a.separator = a.networkVersion ? "." : ":");
            return a.networkVersion ? this.n(this.string, 3, { pool: "ABCDEF1234567890", length: 4 }).join(a.separator) : this.n(this.string, 6, { pool: "ABCDEF1234567890", length: 2 }).join(a.separator);
        }),
        (a.prototype.normal = function (a) {
            if (
                ((a = e(a, { mean: 0, dev: 1, pool: [] })),
                n(a.pool.constructor !== Array, "Chance: The pool option must be a valid array."),
                n("number" != typeof a.mean, "Chance: Mean (mean) must be a number"),
                n("number" != typeof a.dev, "Chance: Standard deviation (dev) must be a number"),
                a.pool.length > 0)
            )
                return this.normal_pool(a);
            var i,
                r,
                o,
                t,
                s = a.mean,
                l = a.dev;
            do {
                i = (r = 2 * this.random() - 1) * r + (o = 2 * this.random() - 1) * o;
            } while (i >= 1);
            return (t = r * Math.sqrt((-2 * Math.log(i)) / i)), l * t + s;
        }),
        (a.prototype.normal_pool = function (a) {
            var e = 0;
            do {
                var n = Math.round(this.normal({ mean: a.mean, dev: a.dev }));
                if (n < a.pool.length && n >= 0) return a.pool[n];
                e++;
            } while (e < 100);
            throw new RangeError("Chance: Your pool is too small for the given mean and standard deviation. Please adjust.");
        }),
        (a.prototype.radio = function (a) {
            var n = "";
            switch ((a = e(a, { side: "?" })).side.toLowerCase()) {
                case "east":
                case "e":
                    n = "W";
                    break;
                case "west":
                case "w":
                    n = "K";
                    break;
                default:
                    n = this.character({ pool: "KW" });
            }
            return n + this.character({ alpha: !0, casing: "upper" }) + this.character({ alpha: !0, casing: "upper" }) + this.character({ alpha: !0, casing: "upper" });
        }),
        (a.prototype.set = function (a, e) {
            "string" == typeof a ? (h[a] = e) : (h = t(a, h));
        }),
        (a.prototype.tv = function (a) {
            return this.radio(a);
        }),
        (a.prototype.cnpj = function () {
            var a = this.n(this.natural, 8, { max: 9 }),
                e = 2 + 6 * a[7] + 7 * a[6] + 8 * a[5] + 9 * a[4] + 2 * a[3] + 3 * a[2] + 4 * a[1] + 5 * a[0];
            (e = 11 - (e % 11)) >= 10 && (e = 0);
            var n = 2 * e + 3 + 7 * a[7] + 8 * a[6] + 9 * a[5] + 2 * a[4] + 3 * a[3] + 4 * a[2] + 5 * a[1] + 6 * a[0];
            return (n = 11 - (n % 11)) >= 10 && (n = 0), "" + a[0] + a[1] + "." + a[2] + a[3] + a[4] + "." + a[5] + a[6] + a[7] + "/0001-" + e + n;
        }),
        (a.prototype.mersenne_twister = function (a) {
            return new C(a);
        }),
        (a.prototype.blueimp_md5 = function () {
            return new g();
        });
    var C = function (a) {
        void 0 === a && (a = Math.floor(Math.random() * Math.pow(10, 13))),
            (this.N = 624),
            (this.M = 397),
            (this.MATRIX_A = 2567483615),
            (this.UPPER_MASK = 2147483648),
            (this.LOWER_MASK = 2147483647),
            (this.mt = new Array(this.N)),
            (this.mti = this.N + 1),
            this.init_genrand(a);
    };
    (C.prototype.init_genrand = function (a) {
        for (this.mt[0] = a >>> 0, this.mti = 1; this.mti < this.N; this.mti++)
            (a = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30)), (this.mt[this.mti] = ((1812433253 * ((4294901760 & a) >>> 16)) << 16) + 1812433253 * (65535 & a) + this.mti), (this.mt[this.mti] >>>= 0);
    }),
        (C.prototype.init_by_array = function (a, e) {
            var n,
                i,
                r = 1,
                o = 0;
            for (this.init_genrand(19650218), n = this.N > e ? this.N : e; n; n--)
                (i = this.mt[r - 1] ^ (this.mt[r - 1] >>> 30)),
                    (this.mt[r] = (this.mt[r] ^ (((1664525 * ((4294901760 & i) >>> 16)) << 16) + 1664525 * (65535 & i))) + a[o] + o),
                    (this.mt[r] >>>= 0),
                    o++,
                    ++r >= this.N && ((this.mt[0] = this.mt[this.N - 1]), (r = 1)),
                    o >= e && (o = 0);
            for (n = this.N - 1; n; n--)
                (i = this.mt[r - 1] ^ (this.mt[r - 1] >>> 30)),
                    (this.mt[r] = (this.mt[r] ^ (((1566083941 * ((4294901760 & i) >>> 16)) << 16) + 1566083941 * (65535 & i))) - r),
                    (this.mt[r] >>>= 0),
                    ++r >= this.N && ((this.mt[0] = this.mt[this.N - 1]), (r = 1));
            this.mt[0] = 2147483648;
        }),
        (C.prototype.genrand_int32 = function () {
            var a,
                e = new Array(0, this.MATRIX_A);
            if (this.mti >= this.N) {
                var n;
                for (this.mti === this.N + 1 && this.init_genrand(5489), n = 0; n < this.N - this.M; n++) (a = (this.mt[n] & this.UPPER_MASK) | (this.mt[n + 1] & this.LOWER_MASK)), (this.mt[n] = this.mt[n + this.M] ^ (a >>> 1) ^ e[1 & a]);
                for (; n < this.N - 1; n++) (a = (this.mt[n] & this.UPPER_MASK) | (this.mt[n + 1] & this.LOWER_MASK)), (this.mt[n] = this.mt[n + (this.M - this.N)] ^ (a >>> 1) ^ e[1 & a]);
                (a = (this.mt[this.N - 1] & this.UPPER_MASK) | (this.mt[0] & this.LOWER_MASK)), (this.mt[this.N - 1] = this.mt[this.M - 1] ^ (a >>> 1) ^ e[1 & a]), (this.mti = 0);
            }
            return (a = this.mt[this.mti++]), (a ^= a >>> 11), (a ^= (a << 7) & 2636928640), (a ^= (a << 15) & 4022730752), (a ^= a >>> 18) >>> 0;
        }),
        (C.prototype.genrand_int31 = function () {
            return this.genrand_int32() >>> 1;
        }),
        (C.prototype.genrand_real1 = function () {
            return this.genrand_int32() * (1 / 4294967295);
        }),
        (C.prototype.random = function () {
            return this.genrand_int32() * (1 / 4294967296);
        }),
        (C.prototype.genrand_real3 = function () {
            return (this.genrand_int32() + 0.5) * (1 / 4294967296);
        }),
        (C.prototype.genrand_res53 = function () {
            return (67108864 * (this.genrand_int32() >>> 5) + (this.genrand_int32() >>> 6)) * (1 / 9007199254740992);
        });
    var g = function () {};
    (g.prototype.VERSION = "1.0.1"),
        (g.prototype.safe_add = function (a, e) {
            var n = (65535 & a) + (65535 & e);
            return (((a >> 16) + (e >> 16) + (n >> 16)) << 16) | (65535 & n);
        }),
        (g.prototype.bit_roll = function (a, e) {
            return (a << e) | (a >>> (32 - e));
        }),
        (g.prototype.md5_cmn = function (a, e, n, i, r, o) {
            return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(e, a), this.safe_add(i, o)), r), n);
        }),
        (g.prototype.md5_ff = function (a, e, n, i, r, o, t) {
            return this.md5_cmn((e & n) | (~e & i), a, e, r, o, t);
        }),
        (g.prototype.md5_gg = function (a, e, n, i, r, o, t) {
            return this.md5_cmn((e & i) | (n & ~i), a, e, r, o, t);
        }),
        (g.prototype.md5_hh = function (a, e, n, i, r, o, t) {
            return this.md5_cmn(e ^ n ^ i, a, e, r, o, t);
        }),
        (g.prototype.md5_ii = function (a, e, n, i, r, o, t) {
            return this.md5_cmn(n ^ (e | ~i), a, e, r, o, t);
        }),
        (g.prototype.binl_md5 = function (a, e) {
            (a[e >> 5] |= 128 << e % 32), (a[14 + (((e + 64) >>> 9) << 4)] = e);
            var n,
                i,
                r,
                o,
                t,
                s = 1732584193,
                l = -271733879,
                c = -1732584194,
                m = 271733878;
            for (n = 0; n < a.length; n += 16)
                (i = s),
                    (r = l),
                    (o = c),
                    (t = m),
                    (s = this.md5_ff(s, l, c, m, a[n], 7, -680876936)),
                    (m = this.md5_ff(m, s, l, c, a[n + 1], 12, -389564586)),
                    (c = this.md5_ff(c, m, s, l, a[n + 2], 17, 606105819)),
                    (l = this.md5_ff(l, c, m, s, a[n + 3], 22, -1044525330)),
                    (s = this.md5_ff(s, l, c, m, a[n + 4], 7, -176418897)),
                    (m = this.md5_ff(m, s, l, c, a[n + 5], 12, 1200080426)),
                    (c = this.md5_ff(c, m, s, l, a[n + 6], 17, -1473231341)),
                    (l = this.md5_ff(l, c, m, s, a[n + 7], 22, -45705983)),
                    (s = this.md5_ff(s, l, c, m, a[n + 8], 7, 1770035416)),
                    (m = this.md5_ff(m, s, l, c, a[n + 9], 12, -1958414417)),
                    (c = this.md5_ff(c, m, s, l, a[n + 10], 17, -42063)),
                    (l = this.md5_ff(l, c, m, s, a[n + 11], 22, -1990404162)),
                    (s = this.md5_ff(s, l, c, m, a[n + 12], 7, 1804603682)),
                    (m = this.md5_ff(m, s, l, c, a[n + 13], 12, -40341101)),
                    (c = this.md5_ff(c, m, s, l, a[n + 14], 17, -1502002290)),
                    (l = this.md5_ff(l, c, m, s, a[n + 15], 22, 1236535329)),
                    (s = this.md5_gg(s, l, c, m, a[n + 1], 5, -165796510)),
                    (m = this.md5_gg(m, s, l, c, a[n + 6], 9, -1069501632)),
                    (c = this.md5_gg(c, m, s, l, a[n + 11], 14, 643717713)),
                    (l = this.md5_gg(l, c, m, s, a[n], 20, -373897302)),
                    (s = this.md5_gg(s, l, c, m, a[n + 5], 5, -701558691)),
                    (m = this.md5_gg(m, s, l, c, a[n + 10], 9, 38016083)),
                    (c = this.md5_gg(c, m, s, l, a[n + 15], 14, -660478335)),
                    (l = this.md5_gg(l, c, m, s, a[n + 4], 20, -405537848)),
                    (s = this.md5_gg(s, l, c, m, a[n + 9], 5, 568446438)),
                    (m = this.md5_gg(m, s, l, c, a[n + 14], 9, -1019803690)),
                    (c = this.md5_gg(c, m, s, l, a[n + 3], 14, -187363961)),
                    (l = this.md5_gg(l, c, m, s, a[n + 8], 20, 1163531501)),
                    (s = this.md5_gg(s, l, c, m, a[n + 13], 5, -1444681467)),
                    (m = this.md5_gg(m, s, l, c, a[n + 2], 9, -51403784)),
                    (c = this.md5_gg(c, m, s, l, a[n + 7], 14, 1735328473)),
                    (l = this.md5_gg(l, c, m, s, a[n + 12], 20, -1926607734)),
                    (s = this.md5_hh(s, l, c, m, a[n + 5], 4, -378558)),
                    (m = this.md5_hh(m, s, l, c, a[n + 8], 11, -2022574463)),
                    (c = this.md5_hh(c, m, s, l, a[n + 11], 16, 1839030562)),
                    (l = this.md5_hh(l, c, m, s, a[n + 14], 23, -35309556)),
                    (s = this.md5_hh(s, l, c, m, a[n + 1], 4, -1530992060)),
                    (m = this.md5_hh(m, s, l, c, a[n + 4], 11, 1272893353)),
                    (c = this.md5_hh(c, m, s, l, a[n + 7], 16, -155497632)),
                    (l = this.md5_hh(l, c, m, s, a[n + 10], 23, -1094730640)),
                    (s = this.md5_hh(s, l, c, m, a[n + 13], 4, 681279174)),
                    (m = this.md5_hh(m, s, l, c, a[n], 11, -358537222)),
                    (c = this.md5_hh(c, m, s, l, a[n + 3], 16, -722521979)),
                    (l = this.md5_hh(l, c, m, s, a[n + 6], 23, 76029189)),
                    (s = this.md5_hh(s, l, c, m, a[n + 9], 4, -640364487)),
                    (m = this.md5_hh(m, s, l, c, a[n + 12], 11, -421815835)),
                    (c = this.md5_hh(c, m, s, l, a[n + 15], 16, 530742520)),
                    (l = this.md5_hh(l, c, m, s, a[n + 2], 23, -995338651)),
                    (s = this.md5_ii(s, l, c, m, a[n], 6, -198630844)),
                    (m = this.md5_ii(m, s, l, c, a[n + 7], 10, 1126891415)),
                    (c = this.md5_ii(c, m, s, l, a[n + 14], 15, -1416354905)),
                    (l = this.md5_ii(l, c, m, s, a[n + 5], 21, -57434055)),
                    (s = this.md5_ii(s, l, c, m, a[n + 12], 6, 1700485571)),
                    (m = this.md5_ii(m, s, l, c, a[n + 3], 10, -1894986606)),
                    (c = this.md5_ii(c, m, s, l, a[n + 10], 15, -1051523)),
                    (l = this.md5_ii(l, c, m, s, a[n + 1], 21, -2054922799)),
                    (s = this.md5_ii(s, l, c, m, a[n + 8], 6, 1873313359)),
                    (m = this.md5_ii(m, s, l, c, a[n + 15], 10, -30611744)),
                    (c = this.md5_ii(c, m, s, l, a[n + 6], 15, -1560198380)),
                    (l = this.md5_ii(l, c, m, s, a[n + 13], 21, 1309151649)),
                    (s = this.md5_ii(s, l, c, m, a[n + 4], 6, -145523070)),
                    (m = this.md5_ii(m, s, l, c, a[n + 11], 10, -1120210379)),
                    (c = this.md5_ii(c, m, s, l, a[n + 2], 15, 718787259)),
                    (l = this.md5_ii(l, c, m, s, a[n + 9], 21, -343485551)),
                    (s = this.safe_add(s, i)),
                    (l = this.safe_add(l, r)),
                    (c = this.safe_add(c, o)),
                    (m = this.safe_add(m, t));
            return [s, l, c, m];
        }),
        (g.prototype.binl2rstr = function (a) {
            var e,
                n = "";
            for (e = 0; e < 32 * a.length; e += 8) n += String.fromCharCode((a[e >> 5] >>> e % 32) & 255);
            return n;
        }),
        (g.prototype.rstr2binl = function (a) {
            var e,
                n = [];
            for (n[(a.length >> 2) - 1] = void 0, e = 0; e < n.length; e += 1) n[e] = 0;
            for (e = 0; e < 8 * a.length; e += 8) n[e >> 5] |= (255 & a.charCodeAt(e / 8)) << e % 32;
            return n;
        }),
        (g.prototype.rstr_md5 = function (a) {
            return this.binl2rstr(this.binl_md5(this.rstr2binl(a), 8 * a.length));
        }),
        (g.prototype.rstr_hmac_md5 = function (a, e) {
            var n,
                i,
                r = this.rstr2binl(a),
                o = [],
                t = [];
            for (o[15] = t[15] = void 0, r.length > 16 && (r = this.binl_md5(r, 8 * a.length)), n = 0; n < 16; n += 1) (o[n] = 909522486 ^ r[n]), (t[n] = 1549556828 ^ r[n]);
            return (i = this.binl_md5(o.concat(this.rstr2binl(e)), 512 + 8 * e.length)), this.binl2rstr(this.binl_md5(t.concat(i), 640));
        }),
        (g.prototype.rstr2hex = function (a) {
            var e,
                n,
                i = "";
            for (n = 0; n < a.length; n += 1) (e = a.charCodeAt(n)), (i += "0123456789abcdef".charAt((e >>> 4) & 15) + "0123456789abcdef".charAt(15 & e));
            return i;
        }),
        (g.prototype.str2rstr_utf8 = function (a) {
            return unescape(encodeURIComponent(a));
        }),
        (g.prototype.raw_md5 = function (a) {
            return this.rstr_md5(this.str2rstr_utf8(a));
        }),
        (g.prototype.hex_md5 = function (a) {
            return this.rstr2hex(this.raw_md5(a));
        }),
        (g.prototype.raw_hmac_md5 = function (a, e) {
            return this.rstr_hmac_md5(this.str2rstr_utf8(a), this.str2rstr_utf8(e));
        }),
        (g.prototype.hex_hmac_md5 = function (a, e) {
            return this.rstr2hex(this.raw_hmac_md5(a, e));
        }),
        (g.prototype.md5 = function (a, e, n) {
            return e ? (n ? this.raw_hmac_md5(e, a) : this.hex_hmac_md5(e, a)) : n ? this.raw_md5(a) : this.hex_md5(a);
        }),
        "undefined" != typeof exports && ("undefined" != typeof module && module.exports && (exports = module.exports = a), (exports.Chance = a)),
        "function" == typeof define &&
            define.amd &&
            define([], function () {
                return a;
            }),
        "undefined" != typeof importScripts && ((chance = new a()), (self.Chance = a)),
        "object" == typeof window && "object" == typeof window.document && ((window.Chance = a), (window.chance = new a()));
})();
